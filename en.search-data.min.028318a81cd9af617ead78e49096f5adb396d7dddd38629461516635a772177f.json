[{"id":0,"href":"/utviklerhandbok/","title":"Utviklerhåndbok","section":"Forside...?","content":" Utviklerhåndbok # Pakkestruktur # Alle filer under samme source-root skal ha en pakkestruktur som er konsekvent relativt til hverandre\nAdvarsler og tips fra intelliJ # Gjør som IntelliJ sier Commit-meldinger # Bruk branch og squash den. Skriv commit-meldinger som gir mening for andre. Lokalt utviklingsmiljø # Oppsett av app – burde fungere lokalt (se brev-api for eksempel) Kan vi få lokal frontend til å fungere mot dev-gcp? Logging / Monitorering # En feilsituasjon skal bare logges en gang Når det skal logges at en exception har inntruffet, så skal man bruke leggemetoden som tar inn en Throwable som et argument, slik at loggrammeverkt kan håndtere hvordan den logges. Når det legges inn kasting og logging av feil så skal det legges med informasjon om hvilken konsekvens feilen har der feilen kastes/logges Kommenter på kjente feil du vet om i alerts i slack. Feilhåndtering # Ikke fang og ignorer feil med mindre verdikjeden tar høyde for det. Felles kode (common / utils) # Bruk av common er OK. Vurder å dele opp common etter domener og/eller integrasjoner. Bruk pensjon-etterlatte-libs for ting som er felles på tvers av apper. Lagring av dato i DB # Vi har en egen klasse for håndtering av tidspunkt. Den heter Tidspunkt\nSærnorske tegn # I koden holder vi oss til ASCII. Særnorske tegn erstattes derfor av kombinasjoner av andre tegn.\nTegn Kode Eksempel norsk Eksempel kode-norsk æ ae Særnorsk Saernorsk ø oe Øve Oeve å aa Låne Laane "},{"id":1,"href":"/kafka/navnestandarder/","title":"Navnestandarder","section":"Kafka","content":" Navnestandard på kafka-medlinger # Status # Besluttet sommer 2022 og alle meldinger i løsninger er ryddet opp i.\nBakgrunn # Stor variasjon i navngivning, der en variabel ofte har 2-3 ulike varianter. Behov for en standard løsning.\nAlternativer # Innføre en navnestandard # Vi blir enige om en navnestandard, og alle apper må forholde seg til det.\nIkke innføre en navnestandard # Alle meldinger kan fortsette å skrives litt vilkårlig.\nKonklusjon # Felles-nøkler er flyttet til et eget bibliotek og skal hentes derfra.\nDisse hentes i appen rapidsandrivers-extra, under StandardKeys.kt, og inkluderer\n@correlation_id @event_name @behov For egne meldinger gjelder følgende:\nCamelCase for alle keynavn vi setter selv på toppnivå i melding (eg sakId, behandlingId) @ brukes bare på \u0026ldquo;system-keys\u0026rdquo;, så alle egne meldinger skal ikke ha @. Navnestandard på hendelser som publiseres # Status # Besluttet 2022-06-09 i utviklersync-møte\nBakgrunn # En del av arkitekturen som har vokst fram i løsningen er at applikasjoner reagerer på hendelsene til hverandre. Det kan oppleves rotete og lite intuitivt om alt om hvordan en hendelse ser ut defineres i hver app.\nAlternativer # Innføre en navnestandard for hendelser # Vi blir enige om en navnestandard, og alle apper må forholde seg til det. En slik navnestandard kan for eksempel utformes slik at det er enkelt å se hvor hendelsen kommer fra og hva den gjelder, uten detaljert kunskap om alle appene.\nIkke innføre en navnestandard for hendelser # Vi lar alle apper lage sine egne navn på hendelser helt uavhengig av andre apper.\nKonklusjon # Vi vil ha en felles navnestandard på hendelsene våre. Hendelser publiseres med navn på formatet DOMENE:HENDELSE. For eksempel publiserer behandling hendelsen BEHANDLING:OPPRETTET når en behandling er opprettet.\n"}]